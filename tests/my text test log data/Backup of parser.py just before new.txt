Backup of parser.py just before new download after all in out fixes


# core/parser.py
from core.expressions import Functor, Value, Var

def parse_expression(obj):
    print(f"Parsing: {obj}")

    if isinstance(obj, str):
        # lowercase is variable, uppercase is functor
        return Var(obj) if obj.islower() else Functor(obj.upper(), [])

    elif isinstance(obj, (int, float)):
        return Value(obj)

    elif isinstance(obj, dict) and "value" in obj:
        return Value(obj["value"])

    elif isinstance(obj, list):
        if not obj:
            raise ValueError("Empty list cannot be parsed as a Functor")

        head = obj[0]
        args = obj[1:]

        parsed_args = [parse_expression(arg) for arg in args]

        if isinstance(head, str):
            return Functor(head.upper(), parsed_args)
        elif isinstance(head, Functor):
            return Functor(head.name, parsed_args)
        else:
            raise ValueError(f"Unsupported head type: {type(head)}")

    else:
        raise ValueError(f"Unsupported expression type: {type(obj)}")