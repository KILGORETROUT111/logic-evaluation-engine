
cd "C:\Users\Dell\Documents\logic-evaluation-engine"

python main.py



["Root", ["SUB", "x", 42], ["Node", {"value": 3}, "MEM", "x"]]

["EEX", "x", "JAM"]

["Root", ["SUB", "x", 42], ["Node", {"value": 1}, "EEX", ["MEM", "x"]]]



Sample log
Enter expression (e.g. ["EX", "x", "JAM"]): ["Root", ["SUB", "x", ["EX", "y", "JAM"]], ["Node", {"value": 3}, "MEM", "x"]]
Error: 'list' object has no attribute 'upper'
Enter expression (e.g. ["EX", "x", "JAM"]): ["EEX", "x", "JAM"]
🔍 Parsing: ['EEX', 'x', 'JAM']
🔍 Parsing: 'x'
🔍 Parsing: 'JAM'
Enter version tag (e.g. v1.0.0): ["EEX", "x", "JAM"]
Final state: State.VAC
Trace:
EEX → ["EEX(Var('x'), JAM())"]
Final state: State.VAC
Trace:
EEX → ["EEX(Var('x'), JAM())"]
PS C:\Users\Dell\Documents\logic-evaluation-engine> python main.py
Enter expression (e.g. 

["EX", "x", "JAM"]): 

["Root", ["SUB", "x", 42], ["Node", {"value": 3}, "MEM", "x"]]
Error: 'list' object has no attribute 'upper'


  File "C:\Users\Dell\Documents\logic-evaluation-engine\main.py", line 43, in <module>
    from core.parser import parse_expression
  File "C:\Users\Dell\Documents\logic-evaluation-engine\core\parser.py", line 29
    elif isinstance(obj, (int, float)):
    ^^^^




python main.py 

"[\"Root\", [\"SUB\", \"x\", 42], [\"Node\", {\"value\": 3}, \"MEM\", \"x\"]]"
["Root", ["SUB", "x", 42], ["Node", {"value": 3}, "MEM", "x"]]

---------
["Root",
  ["SUB", "x", ["EX", "y", "JAM"]],
  ["Node", {"value": 3}, "MEM", "x"]
]


python -m pytest tests/

>> test_eval

["EEX", "x", "JAM"]

["Root", ["SUB", "x", 42], ["Node", {"value": 1}, "EEX", ["MEM", "x"]]]

["Root", ["SUB", "x", 42], ["Node", {"value": 3}, "MEM", "x"]]

["Root", ["SUB", "x", ["EX", "y", "JAM"]], ["Node", {"value": 3}, "MEM", "x"]]

python main.py "[\"Root\", [\"SUB\", \"x\", [\"EX\", \"y\", \"JAM\"]], [\"Node\", {\"value\": 3}, \"MEM\", \"x\"]]"
python main.py "[\"Root\", [\"SUB\", \"x\", [\"EX\", \"y\", \"JAM\"]], [\"Node\", {\"value\": 3}, \"MEM\", \"x\"]]"



LAM Lambda Tests
python main.py "[\"APP\", [\"LAM\", \"x\", [\"EX\", \"x\", \"JAM\"]], 42]"











